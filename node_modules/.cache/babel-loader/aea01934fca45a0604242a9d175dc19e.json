{"ast":null,"code":"var _jsxFileName = \"/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js\";\n// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { userActions } from '../../actions';\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n// \t}\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n// }\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n// const actionCreators = {\n//     register: userActions.register\n// }\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      // step 1\n      firstName: '',\n      lastName: '',\n      email: '',\n      // step 2\n      jobTitle: '',\n      jobCompany: '',\n      jobLocation: ''\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.showStep = () => {\n      const _this$state = this.state,\n            step = _this$state.step,\n            firstName = _this$state.firstName,\n            lastName = _this$state.lastName,\n            jobTitle = _this$state.jobTitle,\n            jobCompany = _this$state.jobCompany,\n            jobLocation = _this$state.jobLocation;\n      if (step === 1) return React.createElement(StepOne, {\n        nextStep: this.nextStep,\n        handleChange: this.handleChange,\n        firstName: firstName,\n        lastName: lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n      if (step === 2) return React.createElement(StepTwo, {\n        nextStep: this.nextStep,\n        prevStep: this.prevStep,\n        handleChange: this.handleChange,\n        jobTitle: jobTitle,\n        jobCompany: jobCompany,\n        jobLocation: jobLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n      if (step === 3) return React.createElement(FinalStep, {\n        firstName: firstName,\n        lastName: lastName,\n        jobTitle: jobTitle,\n        jobCompany: jobCompany,\n        jobLocation: jobLocation,\n        prevStep: this.prevStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Step \", step, \" of 3.\"), this.showStep());\n  }\n\n}\n\nfunction mapState(state) {\n  const registering = state.register.registering;\n  return {\n    registering\n  };\n}\n\nconst actionCreators = {// register: userActions.register\n};\nconst connectedRegister = connect(mapState, actionCreators)(Register);\nexport { connectedRegister as Register };","map":{"version":3,"sources":["/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js"],"names":["React","Component","connect","StepOne","StepTwo","Register","state","step","firstName","lastName","email","jobTitle","jobCompany","jobLocation","nextStep","setState","prevStep","handleChange","input","e","target","value","showStep","render","mapState","registering","register","actionCreators","connectedRegister"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n\n// import { userActions } from '../../actions';\n\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n\t\t\n// \t}\n\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n\n// }\n\n\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n\n// const actionCreators = {\n//     register: userActions.register\n// }\n\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass Register extends Component {\n\tstate = {\n        step: 1,\n\n        // step 1\n        firstName: '',\n        lastName: '',\n        email: '',\n\n        // step 2\n        jobTitle: '',\n        jobCompany: '',\n        jobLocation: ''\n\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    handleChange = input => e => {\n        this.setState({[input]: e.target.value});\n    }\n\n    showStep = () => {\n        const { step, firstName, lastName, jobTitle, jobCompany, jobLocation } = this.state;\n\n        if(step === 1)\n            return (<StepOne \n                nextStep = {this.nextStep} \n                handleChange = {this.handleChange} \n                firstName={firstName} \n                lastName={lastName}\n            />);\n        if(step === 2)\n            return (<StepTwo \n                nextStep = {this.nextStep} \n                prevStep = {this.prevStep}\n                handleChange = {this.handleChange} \n                jobTitle={jobTitle} \n                jobCompany={jobCompany}\n                jobLocation={jobLocation}\n            />);\n        if(step === 3)\n            return (<FinalStep \n                firstName={firstName} \n                lastName={lastName}\n                jobTitle={jobTitle} \n                jobCompany={jobCompany}\n                jobLocation={jobLocation}\n                prevStep = {this.prevStep}\n            />);\n    }\n\n    render(){\n        const { step } = this.state;\n\n        return(\n            <>\n                <h2>Step {step} of 3.</h2>\n                {this.showStep()}\n            </>\n        );\n    }\n}\n function mapState(state) {\n    const { registering } = state.register;\n    return { registering };\n}\n\nconst actionCreators = {\n    // register: userActions.register\n}\nconst connectedRegister = connect(mapState, actionCreators)(Register);\n export { connectedRegister as Register };"]},"metadata":{},"sourceType":"module"}