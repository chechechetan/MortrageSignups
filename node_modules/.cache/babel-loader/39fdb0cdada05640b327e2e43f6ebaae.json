{"ast":null,"code":"var _jsxFileName = \"/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js\";\n// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { userActions } from '../../actions';\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n// \t}\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n// }\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n// const actionCreators = {\n//     register: userActions.register\n// }\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      firstName: '',\n      lastName: '',\n      email: ''\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState = {\n        step: step - 1\n      };\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState = {\n        step: step + 1\n      };\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    const _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email;\n    const values = {};\n\n    switch (step) {\n      case 1:\n        return React.createElement(StepOne, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(StepTwo, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n    }\n  }\n\n}\n\nfunction mapState(state) {\n  const registering = state.register.registering;\n  return {\n    registering\n  };\n}\n\nconst actionCreators = {// register: userActions.register\n};\nconst connectedRegister = connect(mapState, actionCreators)(Register);\nexport { connectedRegister as Register };","map":{"version":3,"sources":["/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js"],"names":["React","Component","connect","StepOne","StepTwo","Register","state","step","firstName","lastName","email","nextStep","setState","handleChange","input","e","target","value","prevStep","render","values","mapState","registering","register","actionCreators","connectedRegister"],"mappings":";AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACPC,MAAAA,IAAI,EAAC,CADE;AAEPC,MAAAA,SAAS,EAAC,EAFH;AAGPC,MAAAA,QAAQ,EAAC,EAHF;AAIPC,MAAAA,KAAK,EAAC;AAJC,KADwB;;AAAA,SAS/BC,QAT+B,GASrB,MAAI;AAAA,YACNJ,IADM,GACC,KAAKD,KADN,CACNC,IADM;AAEb,WAAKK,QAAL,GAAe;AACdL,QAAAA,IAAI,EAAEA,IAAI,GAAG;AADC,OAAf;AAGA,KAd8B;;AAAA,SAiBjCM,YAjBiC,GAiBlBC,KAAK,IAAIC,CAAC,IAAG;AAC3B,WAAKH,QAAL,CAAc;AAAC,SAACE,KAAD,GAAQC,CAAC,CAACC,MAAF,CAASC;AAAlB,OAAd;AACA,KAnBgC;;AAAA,SAqB/BC,QArB+B,GAqBrB,MAAI;AAAA,YACPX,IADO,GACA,KAAKD,KADL,CACPC,IADO;AAEd,WAAKK,QAAL,GAAe;AACdL,QAAAA,IAAI,EAAEA,IAAI,GAAC;AADG,OAAf;AAGA,KA1B+B;AAAA;;AA2BhCY,EAAAA,MAAM,GAAG;AAAA,UACDZ,IADC,GACM,KAAKD,KADX,CACDC,IADC;AAAA,wBAE8B,KAAKD,KAFnC;AAAA,UAEDE,SAFC,eAEDA,SAFC;AAAA,UAEWC,QAFX,eAEWA,QAFX;AAAA,UAEqBC,KAFrB,eAEqBA,KAFrB;AAGR,UAAMU,MAAM,GAAG,EAAf;;AAEA,YAAQb,IAAR;AACC,WAAK,CAAL;AACA,eACC,oBAAC,OAAD;AACA,UAAA,QAAQ,EAAE,KAAKI,QADf;AAEA,UAAA,YAAY,EAAI,KAAKE,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAOA,WAAK,CAAL;AACA,eACC,oBAAC,OAAD;AACA,UAAA,QAAQ,EAAE,KAAKF,QADf;AAEA,UAAA,YAAY,EAAI,KAAKE,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAVD;AAkBA;;AAlD+B;;AAoDhC,SAASQ,QAAT,CAAkBf,KAAlB,EAAyB;AAAA,QACdgB,WADc,GACEhB,KAAK,CAACiB,QADR,CACdD,WADc;AAEtB,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH;;AAED,MAAME,cAAc,GAAG,CACnB;AADmB,CAAvB;AAGA,MAAMC,iBAAiB,GAAGvB,OAAO,CAACmB,QAAD,EAAWG,cAAX,CAAP,CAAkCnB,QAAlC,CAA1B;AACC,SAASoB,iBAAiB,IAAIpB,QAA9B","sourcesContent":["// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n\n// import { userActions } from '../../actions';\n\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n\t\t\n// \t}\n\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n\n// }\n\n\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n\n// const actionCreators = {\n//     register: userActions.register\n// }\n\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass Register extends Component {\n\tstate = { \n\t\tstep:1,\n\t\tfirstName:'',\n\t\tlastName:'',\n\t\temail:''\n\t }\n\n\t //proceed to next step\n\t nextStep =()=>{\n\t\t const {step} =this.state;\n\t\t this.setState=({\n\t\t\t step: step - 1\n\t\t })\n\t }\n\n//Handle field change\nhandleChange = input => e =>{\n\tthis.setState({[input]:e.target.value});\n}\n\t //Go to back step\n\t prevStep =()=>{\n\t\tconst {step} =this.state;\n\t\tthis.setState=({\n\t\t\tstep: step+1\n\t\t})\n\t}\n\trender() { \n\t\tconst {step} =this.state;\n\t\tconst{ firstName , lastName, email} = this.state;\n\t\tconst values = {}\n\n\t\tswitch (step){\n\t\t\tcase 1: \n\t\t\treturn (\n\t\t\t\t<StepOne\n\t\t\t\tnextStep={this.nextStep}\n\t\t\t\thandleChange ={ this.handleChange}\n\t\t\t\t/>\n\t\t\t)\n\n\t\t\tcase 2: \n\t\t\treturn (\n\t\t\t\t<StepTwo\n\t\t\t\tnextStep={this.nextStep}\n\t\t\t\thandleChange ={ this.handleChange}\n\t\t\t\t/>\n\t\t\t)\n\n\t\t}\n\t}\n}\n function mapState(state) {\n    const { registering } = state.register;\n    return { registering };\n}\n\nconst actionCreators = {\n    // register: userActions.register\n}\nconst connectedRegister = connect(mapState, actionCreators)(Register);\n export { connectedRegister as Register };"]},"metadata":{},"sourceType":"module"}