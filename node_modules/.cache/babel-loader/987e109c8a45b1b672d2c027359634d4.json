{"ast":null,"code":"var _jsxFileName = \"/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js\";\n// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { userActions } from '../../actions';\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n// \t}\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n// }\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n// const actionCreators = {\n//     register: userActions.register\n// }\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\nimport StepThree from './StepThree';\nimport StepFour from './StepFour';\nimport FinalStep from './FinalStep';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      // step 1\n      home: '',\n      noofpeople: '',\n      propertycost: '',\n      deposit: '',\n      // firstName: '',\n      // lastName: '',\n      // email: '',\n      // step 2\n      jobTitle: '',\n      jobCompany: '',\n      jobLocation: '',\n      jobStart: '',\n      //step 3\n      title: '',\n      firstName: '',\n      middleName: '',\n      surName: '',\n      //step4 contact details\n      phone: '',\n      email: '',\n      confirmEmail: ''\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }); //hide and show contract based on employment status\n\n      var element = document.getElementById('jobtitle');\n      if (e.target.value === 'employed') element.style.display = 'block';else if (e.target.value === 'not employed') element.style.display = 'none';\n    };\n\n    this.showStep = () => {\n      const _this$state = this.state,\n            step = _this$state.step,\n            home = _this$state.home,\n            noofpeople = _this$state.noofpeople,\n            propertycost = _this$state.propertycost,\n            deposit = _this$state.deposit,\n            jobTitle = _this$state.jobTitle,\n            jobCompany = _this$state.jobCompany,\n            jobLocation = _this$state.jobLocation,\n            jobStart = _this$state.jobStart,\n            title = _this$state.title,\n            firstName = _this$state.firstName,\n            middleName = _this$state.middleName,\n            surName = _this$state.surName,\n            phone = _this$state.phone,\n            email = _this$state.email,\n            confirmEmail = _this$state.confirmEmail;\n      if (step === 1) return React.createElement(StepOne, {\n        nextStep: this.nextStep,\n        handleChange: this.handleChange,\n        home: home,\n        noofpeople: noofpeople,\n        propertycost: propertycost,\n        deposit: deposit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      });\n      if (step === 2) return React.createElement(StepTwo, {\n        nextStep: this.nextStep,\n        prevStep: this.prevStep,\n        handleChange: this.handleChange,\n        jobTitle: jobTitle,\n        jobCompany: jobCompany,\n        jobLocation: jobLocation,\n        jobStart: jobStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      });\n      if (step === 3) return React.createElement(StepThree, {\n        nextStep: this.nextStep,\n        prevStep: this.prevStep,\n        handleChange: this.handleChange,\n        title: title,\n        firstName: firstName,\n        middleName: middleName,\n        surName: surName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      });\n      if (step === 4) return React.createElement(StepFour, {\n        nextStep: this.nextStep,\n        prevStep: this.prevStep,\n        handleChange: this.handleChange,\n        phone: phone,\n        email: email,\n        confirmEmail: confirmEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      });\n      if (step === 5) return React.createElement(FinalStep, {\n        home: home,\n        noofpeople: noofpeople,\n        propertycost: propertycost,\n        deposit: deposit,\n        jobTitle: jobTitle,\n        jobCompany: jobCompany,\n        jobLocation: jobLocation,\n        jobStart: jobStart,\n        prevStep: this.prevStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Step \", step, \" of 4.\"), this.showStep());\n  }\n\n}\n\nfunction mapState(state) {\n  const registering = state.register.registering;\n  return {\n    registering\n  };\n}\n\nconst actionCreators = {// register: userActions.register\n};\nconst connectedRegister = connect(mapState, actionCreators)(Register);\nexport { connectedRegister as Register };","map":{"version":3,"sources":["/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/components/auth/Register.js"],"names":["React","Component","connect","StepOne","StepTwo","StepThree","StepFour","FinalStep","Register","state","step","home","noofpeople","propertycost","deposit","jobTitle","jobCompany","jobLocation","jobStart","title","firstName","middleName","surName","phone","email","confirmEmail","nextStep","setState","prevStep","handleChange","input","e","target","value","element","document","getElementById","style","display","showStep","render","mapState","registering","register","actionCreators","connectedRegister"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\n// import { connect } from 'react-redux';\n\n// import { userActions } from '../../actions';\n\n// class Register extends Component {\n//     constructor(props) {\n// \t\tsuper(props);\n\n// \t\tthis.state = {\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tfirstName: '',\n// \t\t\tlastName: '',\n// \t\t\tuserName:'',\n// \t\t\tsubmitted : false\n// \t\t};\n// \t\tthis.handleInputChange = this.handleInputChange.bind(this);\n// \t\tthis.submitRegister = this.submitRegister.bind(this);\n\t\t\n// \t}\n\n// \thandleInputChange(e) {\n// \t\tlet name = e.target.name;\n// \t\tlet value = e.target.value;\n// \t\tthis.setState({\n// \t\t\t[name]: value\n// \t\t});\n// \t}\n\n// \tsubmitRegister(e) {\n// \t\te.preventDefault();\n// \t\tthis.setState({ submitted: true });\n// \t\tconst { firstName, lastName, userName, email, password } = this.state;\n// \t\tif (email && password) {\n// \t\t\tthis.props.register({firstName, lastName, userName, email, password});\n// \t\t}\n// \t}\n\n// \trender(){\n// \t\tconst { registering  } = this.props;\n//         const { firstName, lastName, userName, email, password, submitted } = this.state;\n// \t\treturn(\n\n// \t\t\t<div className=\"col-md-4 col-md-offset-4\">\n// \t\t\t<h2 className=\"text-center\">User Registration</h2><form>\n// \t\t\t<div className={'form-group' + (submitted && !firstName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>First Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"firstName\" className=\"form-control input-shadow\" placeholder=\"Enter First Name\" value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t { submitted && !firstName && <div className=\"help-block\">First Name is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !lastName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Last Name:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"lastName\" className=\"form-control input-shadow\" placeholder=\"Enter Last Name\" value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\"/>\n// \t\t\t \t\t\t\t\t\t\t\t{ submitted && !lastName && <div className=\"help-block\">Last Name is required</div> }\t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !userName ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Username:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"userName\" className=\"form-control input-shadow\" placeholder=\"Enter user name\" value={this.state.userName} onChange={this.handleInputChange} name=\"userName\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !userName && <div className=\"help-block\">username is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !email ? ' has-error' : '')}>\n// \t\t\t\t\t<label>Email:</label>\n// \t\t\t\t\t<input type=\"text\" id=\"email\" className=\"form-control input-shadow\" placeholder=\"Enter Email\" value={this.state.email} onChange={this.handleInputChange} name=\"email\"/>\n// \t\t\t\t\t\t\t\t\t\t\t{ submitted && !email && <div className=\"help-block\">Email is required</div> }\n// \t\t\t</div>\n// \t\t\t<div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n// \t\t\t\t\t<label for=\"password\">Password: </label>\n// \t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control input-shadow\" placeholder=\"Enter Password\" value={this.state.password}\n// \t\t\t\t\tonChange={this.handleInputChange} name=\"password\"/>\n// \t\t\t\t\t{ submitted && !firstName && <div className=\"help-block\">Password is required</div> }\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"button\" onClick={this.submitRegister} className=\"btn btn-primary btn-block\">Register</button>\n// \t\t\t<Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n// \t\t </form></div>\n// \t\t)\n// \t}\n\n// }\n\n\n// function mapState(state) {\n//     const { registering } = state.register;\n//     return { registering };\n// }\n\n// const actionCreators = {\n//     register: userActions.register\n// }\n\n// const connectedRegister = connect(mapState, actionCreators)(Register);\n// export { connectedRegister as Register };\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\nimport StepThree from './StepThree';\nimport StepFour from './StepFour';\nimport FinalStep from './FinalStep';\n\nclass Register extends Component {\n\tstate = {\n        step: 1,\n\n\t\t// step 1\n\t\thome: '',\n\t\tnoofpeople: '',\n\t\tpropertycost: '',\n\t\tdeposit: '',\n        // firstName: '',\n        // lastName: '',\n        // email: '',\n\n        // step 2\n        jobTitle: '',\n        jobCompany: '',\n\t\tjobLocation: '',\n\t\tjobStart:'',\n\n\t\t//step 3\n\t\ttitle:'',\n\t\tfirstName:'',\n\t\tmiddleName:'',\n\t\tsurName:'',\n\n\t\t//step4 contact details\n\t\tphone:'',\n\t\temail:'',\n\t\tconfirmEmail:''\n\n\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    handleChange = input => e => {\n\t\tthis.setState({[input]: e.target.value});\n\n\t\t//hide and show contract based on employment status\n\t\tvar element=document.getElementById('jobtitle');\n\t\t\tif(e.target.value==='employed' )\n\t\t\telement.style.display='block';\n\t\t\telse  if(e.target.value=== 'not employed')\n\t\t\telement.style.display='none';\n\t\t\t\n    }\n\n    showStep = () => {\n        const { \n\t\t\tstep, \n\t\t\thome, \n\t\t\tnoofpeople,\n\t\t\tpropertycost,\n\t\t\tdeposit, \n\t\t\tjobTitle, \n\t\t\tjobCompany, \n\t\t\tjobLocation, \n\t\t\tjobStart ,\n\t\t\ttitle,\n\t\t\tfirstName,\n\t\t\tmiddleName,\n\t\t\tsurName,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tconfirmEmail\n\t\t} = this.state;\n\n        if(step === 1)\n            return (<StepOne \n                nextStep = {this.nextStep} \n                handleChange = {this.handleChange} \n                home={home} \n\t\t\t\tnoofpeople={noofpeople}\n\t\t\t\tpropertycost={propertycost}\n\t\t\t\tdeposit={deposit}\n\t\t\t\t\n            />);\n        if(step === 2)\n            return (<StepTwo \n                nextStep = {this.nextStep} \n                prevStep = {this.prevStep}\n                handleChange = {this.handleChange} \n                jobTitle={jobTitle} \n                jobCompany={jobCompany}\n\t\t\t\tjobLocation={jobLocation}\n\t\t\t\tjobStart={jobStart}\n\t\t\t/>);\n\t\tif(step === 3)\n            return (<StepThree \n                nextStep = {this.nextStep} \n                prevStep = {this.prevStep}\n                handleChange = {this.handleChange} \n                title={title} \n                firstName={firstName}\n\t\t\t\tmiddleName={middleName}\n\t\t\t\tsurName={surName}\n\t\t\t/>);\n\t\tif(step === 4)\n            return (<StepFour \n                nextStep = {this.nextStep} \n                prevStep = {this.prevStep}\n                handleChange = {this.handleChange} \n                phone={phone} \n                email={email}\n\t\t\t\tconfirmEmail={confirmEmail}\n            />);\n        if(step === 5)\n            return (<FinalStep \n                home={home} \n\t\t\t\tnoofpeople={noofpeople}\n\t\t\t\tpropertycost={propertycost}\n\t\t\t\tdeposit={deposit}\n                jobTitle={jobTitle} \n                jobCompany={jobCompany}\n\t\t\t\tjobLocation={jobLocation}\n\t\t\t\tjobStart={jobStart}\n                prevStep = {this.prevStep}\n            />);\n    }\n\n    render(){\n        const { step } = this.state;\n\n        return(\n            <>\n                <h2>Step {step} of 4.</h2>\n                {this.showStep()}\n            </>\n        );\n    }\n}\n function mapState(state) {\n    const { registering } = state.register;\n    return { registering };\n}\n\nconst actionCreators = {\n    // register: userActions.register\n}\nconst connectedRegister = connect(mapState, actionCreators)(Register);\n export { connectedRegister as Register };"]},"metadata":{},"sourceType":"module"}