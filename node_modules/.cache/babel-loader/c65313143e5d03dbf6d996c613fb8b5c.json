{"ast":null,"code":"import { userService } from '../services';\nimport { appConstants, history } from '../helpers';\nimport { alertActions } from './';\nexport const userActions = {\n  login,\n  logout,\n  register\n};\n\nfunction login(email, password) {\n  return dispatch => {\n    dispatch(request({\n      email\n    }));\n    userService.login(email, password).then(user => {\n      dispatch(success(user));\n      history.push('/');\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: appConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: appConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: appConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: appConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success()); // history.push('/login');\n\n      dispatch(alertActions.success('Registration successful. Login to Continue!'));\n    }, error => {\n      console.log(error, 'error--------------------------');\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: appConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: appConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: appConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/chetanan/Downloads/react-redux-user-registration-login-app/src/actions/user.actions.js"],"names":["userService","appConstants","history","alertActions","userActions","login","logout","register","email","password","dispatch","request","then","user","success","push","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","console","log","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAsBC,OAAtB,QAAqC,YAArC;AAEA,SAASC,YAAT,QAA6B,IAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA,MAF0B;AAG1BC,EAAAA;AAH0B,CAApB;;AAMP,SAASF,KAAT,CAAeG,KAAf,EAAsBC,QAAtB,EAAgC;AAC/B,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAChBH,MAAAA;AADgB,KAAD,CAAR,CAAR;AAIAR,IAAAA,WAAW,CAACK,KAAZ,CAAkBG,KAAlB,EAAyBC,QAAzB,EACEG,IADF,CAEEC,IAAI,IAAI;AACPH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACAX,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACA,KALH,EAMEC,KAAK,IAAI;AACRN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmBA,KAAnB,CAAD,CAAR;AACA,KATH;AAWA,GAhBD;;AAkBA,WAASL,OAAT,CAAiBE,IAAjB,EAAuB;AACtB,WAAO;AACNK,MAAAA,IAAI,EAAEjB,YAAY,CAACkB,aADb;AAENN,MAAAA;AAFM,KAAP;AAIA;;AAED,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACtB,WAAO;AACNK,MAAAA,IAAI,EAAEjB,YAAY,CAACmB,aADb;AAENP,MAAAA;AAFM,KAAP;AAIA;;AAED,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AACvB,WAAO;AACNE,MAAAA,IAAI,EAAEjB,YAAY,CAACoB,aADb;AAENL,MAAAA;AAFM,KAAP;AAIA;AACD;;AAED,SAASV,MAAT,GAAkB;AACdN,EAAAA,WAAW,CAACM,MAAZ;AACA,SAAO;AAAEY,IAAAA,IAAI,EAAEjB,YAAY,CAACqB;AAArB,GAAP;AACH;;AAGD,SAASf,QAAT,CAAkBM,IAAlB,EAAwB;AACpB,SAAOH,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAACE,IAAD,CAAR,CAAR;AACAb,IAAAA,WAAW,CAACO,QAAZ,CAAqBM,IAArB,EACKD,IADL,CAEQC,IAAI,IAAI;AACJH,MAAAA,QAAQ,CAACI,OAAO,EAAR,CAAR,CADI,CAEJ;;AACAJ,MAAAA,QAAQ,CAACP,YAAY,CAACW,OAAb,CAAqB,6CAArB,CAAD,CAAR;AACH,KANT,EAOQE,KAAK,IAAI;AACpBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAkB,iCAAlB;AACeN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmBA,KAAnB,CAAD,CAAR;AACH,KAXT;AAaH,GAfD;;AAiBA,WAASL,OAAT,CAAiBE,IAAjB,EAAuB;AACvB,WAAO;AACNK,MAAAA,IAAI,EAAEjB,YAAY,CAACwB,gBADb;AAENZ,MAAAA;AAFM,KAAP;AAIA;;AACA,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACxB,WAAO;AACJK,MAAAA,IAAI,EAAEjB,YAAY,CAACyB,gBADf;AAEJb,MAAAA;AAFI,KAAP;AAIA;;AACC,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAEjB,YAAY,CAAC0B,gBAArB;AAAuCX,MAAAA;AAAvC,KAAP;AAAuD;AACpF","sourcesContent":["import { userService } from '../services';\nimport { appConstants,history } from '../helpers';\n\nimport { alertActions } from './';\n\nexport const userActions = {\n\tlogin,\n\tlogout,\n\tregister\n};\n\nfunction login(email, password) {\n\treturn dispatch => {\n\t\tdispatch(request({\n\t\t\temail\n\t\t}));\n\n\t\tuserService.login(email, password)\n\t\t\t.then(\n\t\t\t\tuser => {\n\t\t\t\t\tdispatch(success(user));\n\t\t\t\t\thistory.push('/');\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tdispatch(failure(error));\n\t\t\t\t\tdispatch(alertActions.error(error));\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tfunction request(user) {\n\t\treturn {\n\t\t\ttype: appConstants.LOGIN_REQUEST,\n\t\t\tuser\n\t\t}\n\t}\n\n\tfunction success(user) {\n\t\treturn {\n\t\t\ttype: appConstants.LOGIN_SUCCESS,\n\t\t\tuser\n\t\t}\n\t}\n\n\tfunction failure(error) {\n\t\treturn {\n\t\t\ttype: appConstants.LOGIN_FAILURE,\n\t\t\terror\n\t\t}\n\t}\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: appConstants.LOGOUT };\n}\n\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    // history.push('/login');\n                    dispatch(alertActions.success('Registration successful. Login to Continue!'));\n                },\n                error => {\n\t\t\t\t\tconsole.log(error,'error--------------------------')\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) {\n\t\t\t return { \n\t\t\t\t type: appConstants.REGISTER_REQUEST, \n\t\t\t\t user \n\t\t\t\t} \n\t\t\t}\n    function success(user) { \n\t\t\treturn {\n\t\t\t\t\t type: appConstants.REGISTER_SUCCESS, \n\t\t\t\t\t user \n\t\t\t\t} \n\t\t}\n    function failure(error) { return { type: appConstants.REGISTER_FAILURE, error } }\n}\n"]},"metadata":{},"sourceType":"module"}